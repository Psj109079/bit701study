다형성 (클래스가 상속관계에 있을때 나타나는 다채로운 성질)
	다형성의 핵심 = 타입의 묶음
	
	같은 자료형에 여러가지 타입의 데이터를 대입하여 다양한 결과를 얻어낼 수 있는 성질
	
	오버로딩, 오버라이딩, 업캐스팅, 다운캐스팅, 인터페이스, 추상메소드, 추상클래스
	등이 다형성에 속한다
	
	자료형 다형성 사용 예시
	class Rectangle {
	}
	
	class Triangle {
	}
	
	class Circle {
	}
	
	ArrayList<Rectangle> rectangles = new ArrayList<>();
	rectangles.add(new Rectangle(1,2,3,4));
	rectangles.add(new Rectangle(10,20,30,40));
	rectangles.forEach(each -> System.out.println(each));
	
	ArrayList<Triangle> triangles = new ArrayList<>();
	triangles.add(new Triangle(1,2,3));
	triangles.add(new Triangle(10,20,30));
	triangles.forEach(each -> System.out.println(each));
	
	ArrayList<Circle> circles = new ArrayList<>();
	circles.add(new Circle());
	circles.add(new Circle());
	circles.forEach(each -> System.out.println(each));
	
	--------------------------------------------------------------------
	class Shape { // 위의 코드를 Shape class 로 묶어 반복되는 부분을 줄임
	}
	
	class Rectangle extends Shape {
	}
	
	class Triangle extends Shape {
	}
	
	class Circle extends Shape {
	}
	
	ArrayList<Shape> shapes = new ArrayList<>();
	shapes.add(new Rectangle(1,2,3,4));
	shapes.add(new Rectangle(10,20,30,40));
	shapes.add(new Triangle(1,2,3));
	shapes.add(new Triangle(10,20,30));
	shapes.add(new Circle());
	shapes.add(new Circle());
	shapes.forEach(each -> System.out.println(each));
	